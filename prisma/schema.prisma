generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Group {
  id      Int       @id @default(autoincrement())
  name    String
  section Section[]
}

model Instructor {
  id                  Int                   @id @default(autoincrement())
  name                String
  instructorOnSection InstructorOnSection[]
}

model Building {
  id   Int    @id @default(autoincrement())
  name String
  code String
  room Room[]
}

enum RoomType {
  lecture
  lab
  both
}

model Room {
  id         Int       @id @default(autoincrement())
  name       String
  buildingId Int
  building   Building  @relation(fields: [buildingId], references: [id])
  type       RoomType
  section    Section[]
}

enum SubjectType {
  compulsory
  elective
}

enum SubjectCategory {
  internal
  external
}

model Subject {
  id              Int               @id @default(autoincrement())
  code            String
  name            String
  credit          Int
  lecture         Int
  lab             Int
  exam            Int
  type            SubjectType
  category        SubjectCategory
  section         Section[]
  subjectOnCourse SubjectOnCourse[]
}

model Course {
  id      Int               @id @default(autoincrement())
  name    String
  subjectOnCourse SubjectOnCourse[]
}

model SubjectOnCourse {
  subjectId Int
  courseId  Int
  course    Course  @relation(fields: [courseId], references: [id], onDelete: Cascade)
  subject   Subject @relation(fields: [subjectId], references: [id])

  @@id([subjectId, courseId])
}

enum SectionType {
  lecture
  lab
}

model Section {
  id                  Int                   @id @default(autoincrement())
  type                SectionType
  no                  Int
  lab                 Int?
  subjectId           Int
  roomId              Int?
  groupId             Int?
  parentId            Int?
  parent              Section?              @relation("AssociatedSection", fields: [parentId], references: [id], onDelete: Cascade)
  child               Section[]             @relation("AssociatedSection")
  subject             Subject               @relation(fields: [subjectId], references: [id])
  room                Room?                 @relation(fields: [roomId], references: [id])
  group               Group?                @relation(fields: [groupId], references: [id])
  instructorOnSection InstructorOnSection[]
  timetable           Timetable[]
  timetableExam       TimetableExam[]
}

model InstructorOnSection {
  sectionId    Int
  instructorId Int
  section      Section    @relation(fields: [sectionId], references: [id], onDelete: Cascade)
  instructor   Instructor @relation(fields: [instructorId], references: [id])

  @@id([sectionId, instructorId])
}

enum Weekday {
  mon
  tue
  wed
  thu
  fri
  sat
  sun
}

model Timetable {
  id        Int     @id @default(autoincrement())
  weekday   Weekday
  start     Int
  end       Int
  sectionId Int
  section   Section @relation(fields: [sectionId], references: [id], onDelete: Cascade)
}

model TimetableExam {
  id        Int     @id @default(autoincrement())
  weekday   Weekday
  start     Int
  end       Int
  sectionId Int
  section   Section @relation(fields: [sectionId], references: [id], onDelete: Cascade)
}
